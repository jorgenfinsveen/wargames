<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>idatx2001.jorgfi.wargamesApp</groupId>
  <artifactId>wargames</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>wargames</name>
  
  <properties>
    <maven.compiler.source>16</maven.compiler.source>
    <maven.compiler.target>16</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

<build>
    <plugins>
        <!-- Add a newer version of the Maven compiler to be compliant with modules -->
    
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
                <release>16</release> 
            </configuration>
        </plugin>

        <!-- Add a newer version of the JUnit test interface surefire, to be compliant with JUnit5 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.0.0-M5</version>
            <configuration>
              </configuration>
        </plugin>


        
        <plugin>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-maven-plugin</artifactId>
            <version>0.0.8</version>
            <configuration>
                <mainClass>wargames/idatx2001.jorgfi.wargamesApp.WargamesMain</mainClass>
            </configuration>
        </plugin>

    

        <!-- Add configuration for the JavaDoc plugin, so that JavaDoc is automatically generated upon packaging -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.3.1</version>
            <!-- configure how to execute this plugin -->
            <executions>
                <execution>
                    <!--
                        connect the execution of the plugin to the Maven lifecycle phase "package"
                        so that JavaDoc is generated every time you run "mvn package"
                    -->
                    <phase>install</phase>
                    <id>attach-javadocs</id>
                    <!--
                        set which of the goals in the plugin to execute. The JavaDoc plugin
                        has a total of 16 goals to choose from. See: https://maven.apache.org/plugins/maven-javadoc-plugin/
                        The most common once beeing either "javadoc" or "jar"
                    -->
                    <goals>
                        <goal>javadoc</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <!-- generate javadoc only for public classes and members -->
                <show>public</show>
                <!-- Omits the HELP link in the navigation bars at the top and bottom of each page of output. -->
                <nohelp>true</nohelp>
            </configuration>
        </plugin>
    </plugins>
</build>

<dependencies>
    <!-- Add dependecy to the core-library of JavaFX -->
    <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-controls</artifactId>
        <version>17.0.2</version>
    </dependency>
    
    <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-fxml</artifactId>
        <version>17.0.2</version>
    </dependency>

    <!--
    And of course we need to add support for JUnit5-testing ;-)
    REMEMBER to add the scope-part!
    -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>5.7.1</version>
        <scope>test</scope>
    </dependency>

</dependencies>

</project>